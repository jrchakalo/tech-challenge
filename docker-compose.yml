services:
  postgres:
    image: postgres:15-alpine
    container_name: tech-challenge-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    networks:
      - tech-challenge-network
    secrets:
      - db_password

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tech-challenge-backend
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD_FILE: /run/secrets/db_password
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      JWT_REFRESH_SECRET_FILE: /run/secrets/jwt_refresh_secret
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_REGION: ${AWS_REGION}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3001/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    networks:
      - tech-challenge-network
    secrets:
      - db_password
      - jwt_secret
      - jwt_refresh_secret

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tech-challenge-frontend
    environment:
      REACT_APP_API_URL: http://backend:3001/api
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
    networks:
      - tech-challenge-network

volumes:
  postgres_data:

networks:
  tech-challenge-network:
    driver: bridge

secrets:
  db_password:
    file: ${DOCKER_SECRET_DB_PASSWORD_FILE:-./secrets/db_password.txt.example}
  jwt_secret:
    file: ${DOCKER_SECRET_JWT_SECRET_FILE:-./secrets/jwt_secret.txt.example}
  jwt_refresh_secret:
    file: ${DOCKER_SECRET_JWT_REFRESH_SECRET_FILE:-./secrets/jwt_refresh_secret.txt.example}